Write-up for PA4
----------------
This assignment is 24 hours late. I've already used 3 slip hours. So this leaves me 73 slip hours remaining.

First of all, I started the ClassTable.java, so that I could do class bookkeeping. It starts out by instantiating the basic classes, as well as a null-mapped "SELF_TYPE" just to check for inclusion. ClassTable goes on to cache the features of the various classes, as well as check that the class graph itself is well-formed.

I check for duplicate names/illegitimate edges/cycles with an outside class I wrote "Graph.java". I tried to make it as generic as possible, using generics, so it could potentially be reused.

For cool-tree, I tried as best as possible to keep components independent of each other, so that the code is as general as possible. (This was a huge help with the skeleton by the way!) I have the program semant checker check that main is in the program (and has no args, etc etc), populate a SymbolTable that will serve as a scope lookup alongside the already instantiated ClassTable for the rest of the semant checks. And so on, I trickle down semant down the tree, with each each complex type doing its own type checking and type annotating.

The important part while reading the code is that ClassTable is there to check class relationships and feature inclusion, and the SymbolTable is there to maintain scope with other identifiers. So when checking for id's I check both the ClassTable for ancestor id's and the current scope for the id name. With that, most of the code is just simple bookkeeping along the way.
